/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sec2.saml.client.gui.controller.view;

import org.sec2.saml.client.gui.log.CustomLogEntry;

/**
 *
 * @author dev
 */
public class LogPanel extends javax.swing.JPanel {

    /**
     * Creates new form LogPanel
     */
    public LogPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        appender = new org.sec2.saml.client.gui.log.CustomAppender();
        kit = new org.apache.batik.util.gui.xmleditor.XMLEditorKit();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logList = new javax.swing.JList();
        clear = new javax.swing.JButton();
        requestPlain = new javax.swing.JButton();
        requestEncrypted = new javax.swing.JButton();
        responseEncrypted = new javax.swing.JButton();
        responsePlain = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        content = new javax.swing.JEditorPane();

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Log");

        logList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${myLog}");
        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, appender, eLProperty, logList);
        jListBinding.setDetailBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        bindingGroup.addBinding(jListBinding);

        jScrollPane1.setViewportView(logList);

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        requestPlain.setText("Request Plain");
        requestPlain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestPlainActionPerformed(evt);
            }
        });

        requestEncrypted.setText("Request Encrypted");
        requestEncrypted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestEncryptedActionPerformed(evt);
            }
        });

        responseEncrypted.setText("Response Encrypted");
        responseEncrypted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responseEncryptedActionPerformed(evt);
            }
        });

        responsePlain.setText("Response Plain");
        responsePlain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                responsePlainActionPerformed(evt);
            }
        });

        content.setEditable(false);
        content.setEditorKit(kit);
        jScrollPane2.setViewportView(content);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(clear))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(requestPlain)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(requestEncrypted)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(responseEncrypted)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(responsePlain))
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {requestEncrypted, requestPlain, responseEncrypted, responsePlain});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(requestPlain)
                            .addComponent(requestEncrypted)
                            .addComponent(responseEncrypted)
                            .addComponent(responsePlain))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        appender.clear();
    }//GEN-LAST:event_clearActionPerformed

    private void responsePlainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responsePlainActionPerformed
        final int selected = logList.getSelectedIndex();
        if (selected >= 0) {
            final CustomLogEntry entry = appender.getMyLog().get(selected);
            final String xml = entry.getResponsePlain();
            content.setText(xml);
        }
    }//GEN-LAST:event_responsePlainActionPerformed

    private void requestPlainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestPlainActionPerformed
        final int selected = logList.getSelectedIndex();
        if (selected >= 0) {
            final CustomLogEntry entry = appender.getMyLog().get(selected);
            final String xml = entry.getRequestPlain();
            content.setText(xml);
        }
    }//GEN-LAST:event_requestPlainActionPerformed

    private void requestEncryptedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestEncryptedActionPerformed
        final int selected = logList.getSelectedIndex();
        if (selected >= 0) {
            final CustomLogEntry entry = appender.getMyLog().get(selected);
            final String xml = entry.getRequestEncrypted();
            content.setText(xml);
        }
    }//GEN-LAST:event_requestEncryptedActionPerformed

    private void responseEncryptedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_responseEncryptedActionPerformed
        final int selected = logList.getSelectedIndex();
        if (selected >= 0) {
            final CustomLogEntry entry = appender.getMyLog().get(selected);
            final String xml = entry.getResponseEncrypted();
            content.setText(xml);
        }
    }//GEN-LAST:event_responseEncryptedActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.sec2.saml.client.gui.log.CustomAppender appender;
    private javax.swing.JButton clear;
    private javax.swing.JEditorPane content;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.apache.batik.util.gui.xmleditor.XMLEditorKit kit;
    private javax.swing.JList logList;
    private javax.swing.JButton requestEncrypted;
    private javax.swing.JButton requestPlain;
    private javax.swing.JButton responseEncrypted;
    private javax.swing.JButton responsePlain;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
