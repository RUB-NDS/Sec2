/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sec2.saml.client.gui.controller.view;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.sec2.exceptions.ExMiddlewareException;
import org.sec2.managers.IGroupManager;
import org.sec2.managers.IUserManager;
import org.sec2.managers.ManagerProvider;
import org.sec2.managers.beans.Group;
import org.sec2.managers.beans.User;
import org.sec2.saml.client.gui.controller.GuiController;

/**
 *
 * @author dev
 */
public class GroupPanel extends javax.swing.JPanel {

    /**
     * Creates new form GroupPanel
     */
    public GroupPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        controller = GuiController.getInstance();
        memberListToStringConverter1 = new org.sec2.saml.client.gui.controller.view.converter.MemberListToStringConverter();
        title = new javax.swing.JLabel();
        updateGroupsButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        knownGroups = new javax.swing.JList();
        selectedGroupNameLabel = new javax.swing.JLabel();
        selectedGroupNameValue = new javax.swing.JLabel();
        selectedGroupOwnerLabel = new javax.swing.JLabel();
        selectedGroupOwnerValue = new javax.swing.JLabel();
        selectedGroupMemberLabel = new javax.swing.JLabel();
        selectedGroupMemberValue = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        newGroupName = new javax.swing.JTextField();
        newGroupButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        addMemberEmail = new javax.swing.JTextField();
        addMemberButton = new javax.swing.JButton();
        error = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        removeMemberButton = new javax.swing.JButton();

        title.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        title.setText("Group");

        updateGroupsButton.setText("Update Groups");
        updateGroupsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateGroupsButtonActionPerformed(evt);
            }
        });

        knownGroups.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${knownGroups}");
        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, controller, eLProperty, knownGroups);
        jListBinding.setDetailBinding(org.jdesktop.beansbinding.ELProperty.create("${groupName}"));
        bindingGroup.addBinding(jListBinding);

        jScrollPane1.setViewportView(knownGroups);

        selectedGroupNameLabel.setText("Selected Group Name:");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, knownGroups, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.groupName}"), selectedGroupNameValue, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("nothing selected");
        binding.setSourceUnreadableValue("nothing selected");
        bindingGroup.addBinding(binding);

        selectedGroupOwnerLabel.setText("Selected Group Owner:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, knownGroups, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.owner.emailAddress}"), selectedGroupOwnerValue, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("nothing selected");
        binding.setSourceUnreadableValue("nothing selected");
        bindingGroup.addBinding(binding);

        selectedGroupMemberLabel.setText("Selected Group Members:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, knownGroups, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.members}"), selectedGroupMemberValue, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceNullValue("nothing selected");
        binding.setSourceUnreadableValue("nothing selected");
        binding.setConverter(memberListToStringConverter1);
        bindingGroup.addBinding(binding);

        jLabel2.setText("Add new Group:");

        newGroupName.setText("new group name");

        newGroupButton.setText("Add");
        newGroupButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGroupButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Add or Remove Member to Group:");

        addMemberEmail.setText("member email");

        addMemberButton.setText("Add");
        addMemberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMemberButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Delete selected Group");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        removeMemberButton.setText("Remove");
        removeMemberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMemberButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(title)
                            .addComponent(updateGroupsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(selectedGroupNameLabel)
                            .addComponent(selectedGroupOwnerLabel)
                            .addComponent(selectedGroupMemberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                            .addComponent(selectedGroupMemberValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectedGroupOwnerValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(selectedGroupNameValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newGroupName)
                            .addComponent(addMemberEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(addMemberButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeMemberButton))
                            .addComponent(newGroupButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateGroupsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectedGroupNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectedGroupNameValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectedGroupOwnerLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectedGroupOwnerValue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectedGroupMemberLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectedGroupMemberValue))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMemberEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addMemberButton)
                    .addComponent(removeMemberButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newGroupButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(error)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void updateGroupsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateGroupsButtonActionPerformed
        // TODO add your handling code here:
        controller.updateGroups();
    }//GEN-LAST:event_updateGroupsButtonActionPerformed

    private void newGroupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGroupButtonActionPerformed
        final User currentUser = controller.getRegisteredUser().getUser();
        final String name = newGroupName.getText();
        Group newGroup = new Group(name, currentUser);
        try {
            final IGroupManager gm = ManagerProvider.getInstance().getGroupManager();
            gm.createGroup(newGroup);
        } catch (ExMiddlewareException ex) {
            Logger.getLogger(GroupPanel.class.getName()).log(Level.SEVERE, null, ex);
            error.setText(ex.getMessage());
        } catch (IOException ex) {
            Logger.getLogger(GroupPanel.class.getName()).log(Level.SEVERE, null, ex);
            error.setText(ex.getMessage());
        }
    }//GEN-LAST:event_newGroupButtonActionPerformed

    private void addMemberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMemberButtonActionPerformed
        try {

            String groupName = knownGroups.getSelectedValue().toString();
            if (groupName != null) {
                final IGroupManager gm = ManagerProvider.getInstance().getGroupManager();
                final IUserManager um = ManagerProvider.getInstance().getUserManager();
                final String email = addMemberEmail.getText();
                final User user = um.getUser(email);
                Group currentGroup = gm.getGroup(groupName);
                currentGroup.addMember(user);
                gm.updateGroup(currentGroup);
                updateSelcetedGroupMemberValue(currentGroup);
            }
        } catch (ExMiddlewareException ex) {
            Logger.getLogger(GroupPanel.class.getName()).log(Level.SEVERE, null, ex);
            error.setText(ex.getMessage());
        } catch (IOException ex) {
            Logger.getLogger(GroupPanel.class.getName()).log(Level.SEVERE, null, ex);
            error.setText(ex.getMessage());
        }
    }//GEN-LAST:event_addMemberButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String groupName = knownGroups.getSelectedValue().toString();

        if (groupName != null) {
            try {
                final IGroupManager gm = ManagerProvider.getInstance().getGroupManager();
                gm.deleteGroup(groupName);
            } catch (ExMiddlewareException ex) {
                Logger.getLogger(GroupPanel.class.getName()).log(Level.SEVERE, null, ex);
                error.setText(ex.getMessage());
            } catch (IOException ex) {
                Logger.getLogger(GroupPanel.class.getName()).log(Level.SEVERE, null, ex);
                error.setText(ex.getMessage());
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void removeMemberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMemberButtonActionPerformed
                                               
        try {

            String groupName = knownGroups.getSelectedValue().toString();
            if (groupName != null) {
                final IGroupManager gm = ManagerProvider.getInstance().getGroupManager();
                final IUserManager um = ManagerProvider.getInstance().getUserManager();
                final String email = addMemberEmail.getText();
                final User user = um.getUser(email);
                Group currentGroup = gm.getGroup(groupName);
                currentGroup.removeMember(user);
                gm.updateGroup(currentGroup);
                updateSelcetedGroupMemberValue(currentGroup);
            }
        } catch (ExMiddlewareException ex) {
            Logger.getLogger(GroupPanel.class.getName()).log(Level.SEVERE, null, ex);
            error.setText(ex.getMessage());
        } catch (IOException ex) {
            Logger.getLogger(GroupPanel.class.getName()).log(Level.SEVERE, null, ex);
            error.setText(ex.getMessage());
        }
    }//GEN-LAST:event_removeMemberButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMemberButton;
    private javax.swing.JTextField addMemberEmail;
    private org.sec2.saml.client.gui.controller.GuiController controller;
    private javax.swing.JLabel error;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList knownGroups;
    private org.sec2.saml.client.gui.controller.view.converter.MemberListToStringConverter memberListToStringConverter1;
    private javax.swing.JButton newGroupButton;
    private javax.swing.JTextField newGroupName;
    private javax.swing.JButton removeMemberButton;
    private javax.swing.JLabel selectedGroupMemberLabel;
    private javax.swing.JLabel selectedGroupMemberValue;
    private javax.swing.JLabel selectedGroupNameLabel;
    private javax.swing.JLabel selectedGroupNameValue;
    private javax.swing.JLabel selectedGroupOwnerLabel;
    private javax.swing.JLabel selectedGroupOwnerValue;
    private javax.swing.JLabel title;
    private javax.swing.JButton updateGroupsButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void updateSelcetedGroupMemberValue(Group currentGroup) throws ExMiddlewareException, IOException {
        String newMembers = memberListToStringConverter1.convertForward(currentGroup.getMembers());
        selectedGroupMemberValue.setText(newMembers);
    }
}
